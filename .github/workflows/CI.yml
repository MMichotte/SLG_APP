name: Continuous Integration
on: 
  push:
    branches:
      - master
    paths:
      - 'backend/**'
      - 'frontend/**'

env:
  node-version: 14.15.1

jobs:

  unit-tests-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}
      - name: npm install
        working-directory: ./frontend
        run: |
          npm install
      - name: run tests
        working-directory: ./frontend
        run: |
          npm run test:unit:headless
  
  unit-tests-backend:
    runs-on: ubuntu-latest
    env:
      JWT_PRIVATE_KEY: ${{secrets.JWT_PRIVATE_KEY}}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}
      - name: npm install
        working-directory: ./backend
        run: |
          npm install
      - name: run tests
        working-directory: ./backend
        run: |
          npm run test
  
  Build-and-send-to-VPS:
    if: ${{ false }} # disabeling job 
    runs-on: ubuntu-latest
    needs: [unit-tests-frontend, unit-tests-backend]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Build application
        working-directory: .
        run: |
          chmod +x ./scripts/.build.sh
          ./scripts/.build.sh

      - name: create .env files
        run: |
          touch ./app/www/.env
          echo "NODE_ENV=prod" >> ./app/www/.env
          echo "PORT=8080" >> ./app/www/.env
          echo "JWT_PRIVATE_KEY="${{secrets.JWT_PRIVATE_KEY}} >> ./app/www/.env
          echo "TOKEN_EXPIRATION=48h" >> ./app/www/.env
          echo "DATABASE_URL="${{secrets.DATABASE_URL}} >> ./app/www/.env
          echo "REDIS_HOST=192.168.10.8" >> ./app/www/.env
          echo "REDIS_PORT=6379" >> ./app/www/.env
          touch ./app/database/.env
          echo "POSTGRES_USER="${{secrets.POSTGRES_USER}} >> ./app/database/.env
          echo "POSTGRES_PASSWORD="${{secrets.POSTGRES_PASSWORD}} >> ./app/database/.env
          echo "POSTGRES_DB="${{secrets.POSTGRES_DB}} >> ./app/database/.env
        
      - name: Copy app folder content to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: app
          remote: slg-app
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT}}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}

      - name: Restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT}}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd slg-app
            docker-compose down && docker-compose up -d
